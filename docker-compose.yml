name: sonarqube_creedengo_python

services:
  sonar:
    build: .
    container_name: sonar_creedengo_python
    ports:
      - ":9000"
    networks:
      - sonarnet
    depends_on:
      db:
        condition: service_healthy
    environment:
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    env_file:
      - path: ./.default.docker.env
        required: true
      - path: ./.override.docker.env
        required: false
    volumes:
      - "extensions:/opt/sonarqube/extensions"
      - "logs:/opt/sonarqube/logs"
      - "data:/opt/sonarqube/data"

  db:
    image: postgres:12
    container_name: postgresql_creedengo_python
    networks:
      - sonarnet
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
      PGDATA: pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sonar -d sonarqube" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  sonarnet:
    driver: bridge

volumes:
  data:
  logs:
  extensions:
  pg_data:
